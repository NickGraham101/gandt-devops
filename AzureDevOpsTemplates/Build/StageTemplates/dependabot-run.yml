parameters:
  ScheduleName:
  SlackApiUrl:
  SourceFolder:
  GitEmail:
  GitUsername:
  DependabotCliVersion: 'latest'
  DependabotExperiments: 'none'
  RunDependabotManually: false
  RunMergePRManually: false

stages:
- stage: Dependabot
  condition: or(eq(variables['Build.Reason'], 'Schedule'), ${{ parameters.RunDependabotManually }}, ${{ parameters.RunMergePRManually }})
  jobs:
  - job: RunDependabot
    pool:
      vmImage: ubuntu-latest
    steps:
    - checkout: self
    - checkout: gandt-azure-devops-tools
    - task: PowerShell@2
      displayName: 'Check Schedule Name'
      name: CheckScheduleName
      inputs:
        targetType: 'inline'
        script: |
          Write-Output "##vso[task.setvariable variable=RunDependabot;isOutput=true]$false"
          Import-Module $(Build.SourcesDirectory)/gandt-azure-devops-tools/gandt-azure-devops-tools/gandt-azure-devops-tools.psm1
          $Params = @{
            Instance = "$(AzureDevOpsOrganizationName)"
            PatToken = "$(System.AccessToken)"
            ProjectId = "$(System.TeamProjectId)"
            BuildId = "$(Build.BuildId)"
          }
          $Build = Get-Build @Params
          if ($Build.ScheduleName -eq "${{ parameters.ScheduleName }}") {
            Write-Output "Setting RunDependabot to true"
            Write-Output "##vso[task.setvariable variable=RunDependabot;isOutput=true]true"
          }
    - task: CopyFiles@2
      displayName: Copy dependabot.yml
      condition: or(and(eq(variables['CheckScheduleName.RunDependabot'], 'true'), succeeded()), ${{ parameters.RunDependabotManually }})
      inputs:
        SourceFolder: ${{ parameters.SourceFolder }}
        Contents: '**/dependabot.yml'
        TargetFolder: $(Build.SourcesDirectory)/
    - task: dependabot@2
      condition: or(and(eq(variables['CheckScheduleName.RunDependabot'], 'true'), le(variables['System.JobAttempt'], 1), succeeded()), ${{ parameters.RunDependabotManually }})
      inputs:
        dependabotCliPackage: ${{ format('github.com/dependabot/cli/cmd/dependabot@{0}',  parameters.DependabotCliVersion ) }}
        experiments: ${{ parameters.DependabotExperiments }}
  - job: MergePRs
    condition: or(and(eq(variables['RunDependabot'], 'true'), succeeded()), ${{ parameters.RunMergePRManually }})
    variables:
      RunDependabot: $[ dependencies.RunDependabot.outputs['CheckScheduleName.RunDependabot'] ]
    ${{ if and(not(parameters.RunDependabotManually), parameters.RunMergePRManually) }}:
      dependsOn: []
    ${{ else }}:
      dependsOn: RunDependabot
    timeoutInMinutes: 0
    steps:
    - checkout: self
      persistCredentials: true
    - checkout: gandt-azure-devops-tools
    - checkout: gandt-devops
    - task: PowerShell@2
      displayName: 'Merge Dependabot PRs'
      inputs:
        targetType: 'inline'
        script: |
          Import-Module $(Build.SourcesDirectory)/gandt-azure-devops-tools/gandt-azure-devops-tools/gandt-azure-devops-tools.psm1
          $Params = @{
            Instance = "$(AzureDevOpsOrganizationName)"
            PatToken = "$(System.AccessToken)"
            ProjectId = "$(System.TeamProjectId)"
            RepositoryId = "$(Build.Repository.ID)"
            MergedPullRequestBranchPrefix = "DEP"
            MergedPullRequestBranchSuffix = $(Get-Date -format "yyyy-MM-dd")
            LabelsToInclude = @("dependencies")
            GitEmail = "${{ parameters.GitEmail }}"
            GitUsername = "${{ parameters.GitUsername }}"
            SourceCodeRootDirectory = "${{ parameters.SourceFolder }}"
            UseGitHiresMerge = $true
          }
          $PullRequest = Merge-MultiplePullRequest @Params
          if ($PullRequest) {
            Write-Output "Setting PullRequestTitle to $($PullRequest.Title)"
            Write-Output "##vso[task.setvariable variable=PullRequestTitle]$($PullRequest.Title)"
          }
    - task: PowerShell@2
      condition: ne(variables['PullRequestTitle'], '')
      displayName: Send Slack Message
      inputs:
        targetType: 'filePath'
        filePath: gandt-devops/PSScripts/Send-SlackMessage.ps1
        arguments: -Emoji ":man-lifting-weights:" -FallBackMessage "Dependabot PR $(PullRequestTitle) raised" -MarkdownMessage "Dependabot PR $(PullRequestTitle) raised" -MessageTitle "Weekly Dependabot Update" -SlackApiUrl "${{ parameters.SlackApiUrl }}"
        pwsh: true
